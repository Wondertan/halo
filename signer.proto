syntax = "proto3";

package consensus;
option go_package = "github.com/cmwaters/consensus";

// Signer is a service that securely manages a nodes private key
// and signs votes and proposals for the consensus engine.
// 
// The signer should ensure that the node never double signs. This
// usually means implementing a high-water mark tracking the height,
// round and type of vote. 
service Signer {
    rpc Sign(SignRequest) returns (SignResponse);
    rpc Handshake(SignerHandshakeRequest) returns (SignerHandshakeResponse);
}

message SignRequest {
    Type type = 1;
    fixed64 height = 2;
    fixed32 round = 3;
    bytes payload_id = 4;
    string namespace = 5; 

    enum Type {
        UNKNOWN = 0;
        PREVOTE = 2;
        PRECOMMIT = 3;
    }
}

message SignResponse {
    bytes signature = 1;
}

message SignerHandshakeRequest {
    uint64 height = 1;
    uint32 round = 2;
    uint32 version = 3;
    string namespace = 4;
}

message SignerHandshakeResponse {
    bytes pub_key = 1;
}